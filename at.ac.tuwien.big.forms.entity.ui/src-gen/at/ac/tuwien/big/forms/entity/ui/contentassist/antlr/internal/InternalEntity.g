/*
* generated by Xtext
*/
grammar InternalEntity;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package at.ac.tuwien.big.forms.entity.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package at.ac.tuwien.big.forms.entity.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import at.ac.tuwien.big.forms.entity.services.EntityGrammarAccess;

}

@parser::members {
 
 	private EntityGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(EntityGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleEntityModel
entryRuleEntityModel 
:
{ before(grammarAccess.getEntityModelRule()); }
	 ruleEntityModel
{ after(grammarAccess.getEntityModelRule()); } 
	 EOF 
;

// Rule EntityModel
ruleEntityModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityModelAccess().getGroup()); }
(rule__EntityModel__Group__0)
{ after(grammarAccess.getEntityModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntityModelElement
entryRuleEntityModelElement 
:
{ before(grammarAccess.getEntityModelElementRule()); }
	 ruleEntityModelElement
{ after(grammarAccess.getEntityModelElementRule()); } 
	 EOF 
;

// Rule EntityModelElement
ruleEntityModelElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityModelElementAccess().getAlternatives()); }
(rule__EntityModelElement__Alternatives)
{ after(grammarAccess.getEntityModelElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getGroup()); }
(rule__Entity__Group__0)
{ after(grammarAccess.getEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getGroup()); }
(rule__Attribute__Group__0)
{ after(grammarAccess.getAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationship
entryRuleRelationship 
:
{ before(grammarAccess.getRelationshipRule()); }
	 ruleRelationship
{ after(grammarAccess.getRelationshipRule()); } 
	 EOF 
;

// Rule Relationship
ruleRelationship
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationshipAccess().getGroup()); }
(rule__Relationship__Group__0)
{ after(grammarAccess.getRelationshipAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeature
entryRuleFeature 
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureAccess().getAlternatives()); }
(rule__Feature__Alternatives)
{ after(grammarAccess.getFeatureAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumeration
entryRuleEnumeration 
:
{ before(grammarAccess.getEnumerationRule()); }
	 ruleEnumeration
{ after(grammarAccess.getEnumerationRule()); } 
	 EOF 
;

// Rule Enumeration
ruleEnumeration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumerationAccess().getGroup()); }
(rule__Enumeration__Group__0)
{ after(grammarAccess.getEnumerationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getGroup()); }
(rule__Literal__Group__0)
{ after(grammarAccess.getLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEInt
entryRuleEInt 
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEIntAccess().getGroup()); }
(rule__EInt__Group__0)
{ after(grammarAccess.getEIntAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule AttributeType
ruleAttributeType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getAlternatives()); }
(rule__AttributeType__Alternatives)
{ after(grammarAccess.getAttributeTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__EntityModelElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityModelElementAccess().getEntityParserRuleCall_0()); }
	ruleEntity
{ after(grammarAccess.getEntityModelElementAccess().getEntityParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEntityModelElementAccess().getEnumerationParserRuleCall_1()); }
	ruleEnumeration
{ after(grammarAccess.getEntityModelElementAccess().getEnumerationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getAttributeParserRuleCall_0()); }
	ruleAttribute
{ after(grammarAccess.getFeatureAccess().getAttributeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFeatureAccess().getRelationshipParserRuleCall_1()); }
	ruleRelationship
{ after(grammarAccess.getFeatureAccess().getRelationshipParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeTypeAccess().getStringEnumLiteralDeclaration_0()); }
(	'String' 
)
{ after(grammarAccess.getAttributeTypeAccess().getStringEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getIntegerEnumLiteralDeclaration_1()); }
(	'Integer' 
)
{ after(grammarAccess.getAttributeTypeAccess().getIntegerEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getTextEnumLiteralDeclaration_2()); }
(	'Text' 
)
{ after(grammarAccess.getAttributeTypeAccess().getTextEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getDateEnumLiteralDeclaration_3()); }
(	'Date' 
)
{ after(grammarAccess.getAttributeTypeAccess().getDateEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getTimeEnumLiteralDeclaration_4()); }
(	'Time' 
)
{ after(grammarAccess.getAttributeTypeAccess().getTimeEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getEmailEnumLiteralDeclaration_5()); }
(	'Email' 
)
{ after(grammarAccess.getAttributeTypeAccess().getEmailEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getBooleanEnumLiteralDeclaration_6()); }
(	'Boolean' 
)
{ after(grammarAccess.getAttributeTypeAccess().getBooleanEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getYearEnumLiteralDeclaration_7()); }
(	'Year' 
)
{ after(grammarAccess.getAttributeTypeAccess().getYearEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getAttributeTypeAccess().getNoneEnumLiteralDeclaration_8()); }
(	'None' 
)
{ after(grammarAccess.getAttributeTypeAccess().getNoneEnumLiteralDeclaration_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__EntityModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityModel__Group__0__Impl
	rule__EntityModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityModelAccess().getEntityModelAction_0()); }
(

)
{ after(grammarAccess.getEntityModelAccess().getEntityModelAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityModelAccess().getEntityModelElementsAssignment_1()); }
(rule__EntityModel__EntityModelElementsAssignment_1)*
{ after(grammarAccess.getEntityModelAccess().getEntityModelElementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Entity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getEntityKeyword_0()); }

	'entity' 

{ after(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
(rule__Entity__NameAssignment_1)
{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getGroup_2()); }
(rule__Entity__Group_2__0)?
{ after(grammarAccess.getEntityAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getIdKeyword_4()); }

	'id' 

{ after(grammarAccess.getEntityAccess().getIdKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__5__Impl
	rule__Entity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getIdAssignment_5()); }
(rule__Entity__IdAssignment_5)
{ after(grammarAccess.getEntityAccess().getIdAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__6__Impl
	rule__Entity__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getCommaKeyword_6()); }

	',' 

{ after(grammarAccess.getEntityAccess().getCommaKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__7__Impl
	rule__Entity__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getGroup_7()); }
(rule__Entity__Group_7__0)
{ after(grammarAccess.getEntityAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Entity__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_2__0__Impl
	rule__Entity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getEntityAccess().getExtendsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_2__1__Impl
	rule__Entity__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getSuperTypeAssignment_2_1()); }
(rule__Entity__SuperTypeAssignment_2_1)
{ after(grammarAccess.getEntityAccess().getSuperTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getGroup_2_2()); }
(rule__Entity__Group_2_2__0)*
{ after(grammarAccess.getEntityAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Entity__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_2_2__0__Impl
	rule__Entity__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getEntityAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getSuperTypeAssignment_2_2_1()); }
(rule__Entity__SuperTypeAssignment_2_2_1)
{ after(grammarAccess.getEntityAccess().getSuperTypeAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Entity__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_7__0__Impl
	rule__Entity__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getGroup_7_0()); }
(rule__Entity__Group_7_0__0)*
{ after(grammarAccess.getEntityAccess().getGroup_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getFeaturesAssignment_7_1()); }
(rule__Entity__FeaturesAssignment_7_1)
{ after(grammarAccess.getEntityAccess().getFeaturesAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Entity__Group_7_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_7_0__0__Impl
	rule__Entity__Group_7_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_7_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getFeaturesAssignment_7_0_0()); }
(rule__Entity__FeaturesAssignment_7_0_0)
{ after(grammarAccess.getEntityAccess().getFeaturesAssignment_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_7_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_7_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_7_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getCommaKeyword_7_0_1()); }

	',' 

{ after(grammarAccess.getEntityAccess().getCommaKeyword_7_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAttributeKeyword_0()); }

	'attribute' 

{ after(grammarAccess.getAttributeAccess().getAttributeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
(rule__Attribute__NameAssignment_1)
{ after(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAsteriskKeyword_2()); }
(
	'*' 
)?
{ after(grammarAccess.getAttributeAccess().getAsteriskKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__3__Impl
	rule__Attribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getAttributeAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__4__Impl
	rule__Attribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeAssignment_4()); }
(rule__Attribute__TypeAssignment_4)
{ after(grammarAccess.getAttributeAccess().getTypeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getGroup_5()); }
(rule__Attribute__Group_5__0)?
{ after(grammarAccess.getAttributeAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Attribute__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_5__0__Impl
	rule__Attribute__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getColonKeyword_5_0()); }

	':' 

{ after(grammarAccess.getAttributeAccess().getColonKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getEnumerationAssignment_5_1()); }
(rule__Attribute__EnumerationAssignment_5_1)
{ after(grammarAccess.getAttributeAccess().getEnumerationAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relationship__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__0__Impl
	rule__Relationship__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getReferenceKeyword_0()); }

	'reference' 

{ after(grammarAccess.getRelationshipAccess().getReferenceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__1__Impl
	rule__Relationship__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getNameAssignment_1()); }
(rule__Relationship__NameAssignment_1)
{ after(grammarAccess.getRelationshipAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__2__Impl
	rule__Relationship__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getRelationshipAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__3__Impl
	rule__Relationship__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getTargetAssignment_3()); }
(rule__Relationship__TargetAssignment_3)
{ after(grammarAccess.getRelationshipAccess().getTargetAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__4__Impl
	rule__Relationship__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getLeftSquareBracketKeyword_4()); }

	'[' 

{ after(grammarAccess.getRelationshipAccess().getLeftSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__5__Impl
	rule__Relationship__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getLowerBoundAssignment_5()); }
(rule__Relationship__LowerBoundAssignment_5)
{ after(grammarAccess.getRelationshipAccess().getLowerBoundAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__6__Impl
	rule__Relationship__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getFullStopFullStopKeyword_6()); }

	'..' 

{ after(grammarAccess.getRelationshipAccess().getFullStopFullStopKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__7__Impl
	rule__Relationship__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getUpperBoundAssignment_7()); }
(rule__Relationship__UpperBoundAssignment_7)
{ after(grammarAccess.getRelationshipAccess().getUpperBoundAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__8__Impl
	rule__Relationship__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getRightSquareBracketKeyword_8()); }

	']' 

{ after(grammarAccess.getRelationshipAccess().getRightSquareBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getGroup_9()); }
(rule__Relationship__Group_9__0)?
{ after(grammarAccess.getRelationshipAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Relationship__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group_9__0__Impl
	rule__Relationship__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getOppositeOfKeyword_9_0()); }

	'opposite-of' 

{ after(grammarAccess.getRelationshipAccess().getOppositeOfKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relationship__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relationship__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getOppositeAssignment_9_1()); }
(rule__Relationship__OppositeAssignment_9_1)
{ after(grammarAccess.getRelationshipAccess().getOppositeAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Enumeration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumeration__Group__0__Impl
	rule__Enumeration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getEnumKeyword_0()); }

	'enum' 

{ after(grammarAccess.getEnumerationAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumeration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumeration__Group__1__Impl
	rule__Enumeration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getNameAssignment_1()); }
(rule__Enumeration__NameAssignment_1)
{ after(grammarAccess.getEnumerationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumeration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumeration__Group__2__Impl
	rule__Enumeration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getEnumerationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumeration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumeration__Group__3__Impl
	rule__Enumeration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getGroup_3()); }
(rule__Enumeration__Group_3__0)*
{ after(grammarAccess.getEnumerationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumeration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumeration__Group__4__Impl
	rule__Enumeration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getLiteralsAssignment_4()); }
(rule__Enumeration__LiteralsAssignment_4)
{ after(grammarAccess.getEnumerationAccess().getLiteralsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumeration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumeration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getEnumerationAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Enumeration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumeration__Group_3__0__Impl
	rule__Enumeration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getLiteralsAssignment_3_0()); }
(rule__Enumeration__LiteralsAssignment_3_0)
{ after(grammarAccess.getEnumerationAccess().getLiteralsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumeration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumeration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getCommaKeyword_3_1()); }

	',' 

{ after(grammarAccess.getEnumerationAccess().getCommaKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group__0__Impl
	rule__Literal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getNameAssignment_0()); }
(rule__Literal__NameAssignment_0)
{ after(grammarAccess.getLiteralAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group__1__Impl
	rule__Literal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getLiteralAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueAssignment_2()); }
(rule__Literal__ValueAssignment_2)
{ after(grammarAccess.getLiteralAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EInt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
(
	'.' 
)
{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__EntityModel__EntityModelElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityModelAccess().getEntityModelElementsEntityModelElementParserRuleCall_1_0()); }
	ruleEntityModelElement{ after(grammarAccess.getEntityModelAccess().getEntityModelElementsEntityModelElementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__SuperTypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_2_1_0()); }
(
{ before(grammarAccess.getEntityAccess().getSuperTypeEntityIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getSuperTypeEntityIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__SuperTypeAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_2_2_1_0()); }
(
{ before(grammarAccess.getEntityAccess().getSuperTypeEntityIDTerminalRuleCall_2_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getSuperTypeEntityIDTerminalRuleCall_2_2_1_0_1()); }
)
{ after(grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__IdAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getIdAttributeCrossReference_5_0()); }
(
{ before(grammarAccess.getEntityAccess().getIdAttributeQualifiedNameParserRuleCall_5_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getEntityAccess().getIdAttributeQualifiedNameParserRuleCall_5_0_1()); }
)
{ after(grammarAccess.getEntityAccess().getIdAttributeCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__FeaturesAssignment_7_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getFeaturesFeatureParserRuleCall_7_0_0_0()); }
	ruleFeature{ after(grammarAccess.getEntityAccess().getFeaturesFeatureParserRuleCall_7_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__FeaturesAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getFeaturesFeatureParserRuleCall_7_1_0()); }
	ruleFeature{ after(grammarAccess.getEntityAccess().getFeaturesFeatureParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeAttributeTypeEnumRuleCall_4_0()); }
	ruleAttributeType{ after(grammarAccess.getAttributeAccess().getTypeAttributeTypeEnumRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__EnumerationAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getEnumerationEnumerationCrossReference_5_1_0()); }
(
{ before(grammarAccess.getAttributeAccess().getEnumerationEnumerationQualifiedNameParserRuleCall_5_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getAttributeAccess().getEnumerationEnumerationQualifiedNameParserRuleCall_5_1_0_1()); }
)
{ after(grammarAccess.getAttributeAccess().getEnumerationEnumerationCrossReference_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRelationshipAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__TargetAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getTargetEntityCrossReference_3_0()); }
(
{ before(grammarAccess.getRelationshipAccess().getTargetEntityQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRelationshipAccess().getTargetEntityQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getRelationshipAccess().getTargetEntityCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__LowerBoundAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getLowerBoundEIntParserRuleCall_5_0()); }
	ruleEInt{ after(grammarAccess.getRelationshipAccess().getLowerBoundEIntParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__UpperBoundAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getUpperBoundEIntParserRuleCall_7_0()); }
	ruleEInt{ after(grammarAccess.getRelationshipAccess().getUpperBoundEIntParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__OppositeAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getOppositeRelationshipCrossReference_9_1_0()); }
(
{ before(grammarAccess.getRelationshipAccess().getOppositeRelationshipQualifiedNameParserRuleCall_9_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRelationshipAccess().getOppositeRelationshipQualifiedNameParserRuleCall_9_1_0_1()); }
)
{ after(grammarAccess.getRelationshipAccess().getOppositeRelationshipCrossReference_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEnumerationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__LiteralsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getLiteralsLiteralParserRuleCall_3_0_0()); }
	ruleLiteral{ after(grammarAccess.getEnumerationAccess().getLiteralsLiteralParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__LiteralsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getLiteralsLiteralParserRuleCall_4_0()); }
	ruleLiteral{ after(grammarAccess.getEnumerationAccess().getLiteralsLiteralParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getLiteralAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getLiteralAccess().getValueSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


