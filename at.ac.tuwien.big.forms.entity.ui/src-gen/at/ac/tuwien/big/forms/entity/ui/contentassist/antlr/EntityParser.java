/*
* generated by Xtext
*/
package at.ac.tuwien.big.forms.entity.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import at.ac.tuwien.big.forms.entity.services.EntityGrammarAccess;

public class EntityParser extends AbstractContentAssistParser {
	
	@Inject
	private EntityGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected at.ac.tuwien.big.forms.entity.ui.contentassist.antlr.internal.InternalEntityParser createParser() {
		at.ac.tuwien.big.forms.entity.ui.contentassist.antlr.internal.InternalEntityParser result = new at.ac.tuwien.big.forms.entity.ui.contentassist.antlr.internal.InternalEntityParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEntityModelElementAccess().getAlternatives(), "rule__EntityModelElement__Alternatives");
					put(grammarAccess.getFeatureAccess().getAlternatives(), "rule__Feature__Alternatives");
					put(grammarAccess.getAttributeTypeAccess().getAlternatives(), "rule__AttributeType__Alternatives");
					put(grammarAccess.getEntityModelAccess().getGroup(), "rule__EntityModel__Group__0");
					put(grammarAccess.getEntityAccess().getGroup(), "rule__Entity__Group__0");
					put(grammarAccess.getEntityAccess().getGroup_2(), "rule__Entity__Group_2__0");
					put(grammarAccess.getEntityAccess().getGroup_2_2(), "rule__Entity__Group_2_2__0");
					put(grammarAccess.getEntityAccess().getGroup_7(), "rule__Entity__Group_7__0");
					put(grammarAccess.getEntityAccess().getGroup_7_0(), "rule__Entity__Group_7_0__0");
					put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
					put(grammarAccess.getAttributeAccess().getGroup_5(), "rule__Attribute__Group_5__0");
					put(grammarAccess.getRelationshipAccess().getGroup(), "rule__Relationship__Group__0");
					put(grammarAccess.getRelationshipAccess().getGroup_9(), "rule__Relationship__Group_9__0");
					put(grammarAccess.getEnumerationAccess().getGroup(), "rule__Enumeration__Group__0");
					put(grammarAccess.getEnumerationAccess().getGroup_3(), "rule__Enumeration__Group_3__0");
					put(grammarAccess.getLiteralAccess().getGroup(), "rule__Literal__Group__0");
					put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getEntityModelAccess().getEntityModelElementsAssignment_1(), "rule__EntityModel__EntityModelElementsAssignment_1");
					put(grammarAccess.getEntityAccess().getNameAssignment_1(), "rule__Entity__NameAssignment_1");
					put(grammarAccess.getEntityAccess().getSuperTypeAssignment_2_1(), "rule__Entity__SuperTypeAssignment_2_1");
					put(grammarAccess.getEntityAccess().getSuperTypeAssignment_2_2_1(), "rule__Entity__SuperTypeAssignment_2_2_1");
					put(grammarAccess.getEntityAccess().getIdAssignment_5(), "rule__Entity__IdAssignment_5");
					put(grammarAccess.getEntityAccess().getFeaturesAssignment_7_0_0(), "rule__Entity__FeaturesAssignment_7_0_0");
					put(grammarAccess.getEntityAccess().getFeaturesAssignment_7_1(), "rule__Entity__FeaturesAssignment_7_1");
					put(grammarAccess.getAttributeAccess().getNameAssignment_1(), "rule__Attribute__NameAssignment_1");
					put(grammarAccess.getAttributeAccess().getTypeAssignment_4(), "rule__Attribute__TypeAssignment_4");
					put(grammarAccess.getAttributeAccess().getEnumerationAssignment_5_1(), "rule__Attribute__EnumerationAssignment_5_1");
					put(grammarAccess.getRelationshipAccess().getNameAssignment_1(), "rule__Relationship__NameAssignment_1");
					put(grammarAccess.getRelationshipAccess().getTargetAssignment_3(), "rule__Relationship__TargetAssignment_3");
					put(grammarAccess.getRelationshipAccess().getLowerBoundAssignment_5(), "rule__Relationship__LowerBoundAssignment_5");
					put(grammarAccess.getRelationshipAccess().getUpperBoundAssignment_7(), "rule__Relationship__UpperBoundAssignment_7");
					put(grammarAccess.getRelationshipAccess().getOppositeAssignment_9_1(), "rule__Relationship__OppositeAssignment_9_1");
					put(grammarAccess.getEnumerationAccess().getNameAssignment_1(), "rule__Enumeration__NameAssignment_1");
					put(grammarAccess.getEnumerationAccess().getLiteralsAssignment_3_0(), "rule__Enumeration__LiteralsAssignment_3_0");
					put(grammarAccess.getEnumerationAccess().getLiteralsAssignment_4(), "rule__Enumeration__LiteralsAssignment_4");
					put(grammarAccess.getLiteralAccess().getNameAssignment_0(), "rule__Literal__NameAssignment_0");
					put(grammarAccess.getLiteralAccess().getValueAssignment_2(), "rule__Literal__ValueAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			at.ac.tuwien.big.forms.entity.ui.contentassist.antlr.internal.InternalEntityParser typedParser = (at.ac.tuwien.big.forms.entity.ui.contentassist.antlr.internal.InternalEntityParser) parser;
			typedParser.entryRuleEntityModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public EntityGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(EntityGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
