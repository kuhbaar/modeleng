/*
 * generated by Xtext
 */
package at.ac.tuwien.big.forms.form.scoping;

import java.util.Collection;
import java.util.HashSet;










import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;

import at.ac.tuwien.big.forms.Attribute;
import at.ac.tuwien.big.forms.AttributePageElement;
import at.ac.tuwien.big.forms.Entity;
import at.ac.tuwien.big.forms.Feature;
import at.ac.tuwien.big.forms.Form;
import at.ac.tuwien.big.forms.FormModel;
import at.ac.tuwien.big.forms.FormsPackage;
import at.ac.tuwien.big.forms.Page;
import at.ac.tuwien.big.forms.TextField;
import at.ac.tuwien.big.forms.impl.FormsPackageImpl;

/**
 * This class contains custom scoping description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#scoping
 * on how and when to use it 
 *
 */
public class FormScopeProvider extends org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider {
	
	/* An attribute page element has to reference an attribute of the entity the containing form references. */
	public IScope scope_AttributePageElement_attribute(AttributePageElement ape, EReference ref){
		Page p = (Page) ape.eContainer();
		Form f = (Form) p.eContainer();
		/*EObject o = ape.eContainer();
		while (!(o instanceof Form)){
			o = o.eContainer();
			if(o == null)
				return IScope.NULLSCOPE;
		}
		
		Form f = (Form) o;*/
		Entity e = f.getEntity();
		
		if(ref.equals(FormsPackage.Literals.ATTRIBUTE_PAGE_ELEMENT__ATTRIBUTE))
			return Scopes.scopeFor(getAllMemberAttributes(e));
		return IScope.NULLSCOPE;
	}
	
	private Collection<Attribute> getAllMemberAttributes(Entity entity) {
		Collection<Feature> allMemberAttributes = new HashSet<Feature>();
		allMemberAttributes.addAll(entity.getFeatures());
		
		Entity st = entity.getSuperType();
		
		while(st != null){
			allMemberAttributes.addAll(st.getFeatures());
			st = st.getSuperType();
		}
		
		Collection<Attribute> allAttr = new HashSet<Attribute>();
		for (Feature f : allMemberAttributes){
			if(f instanceof Attribute)
				allAttr.add((Attribute) f);
		}
		
		return allAttr;
	}
	/*private Collection<Attribute> getAllEntityAttributes(AttributePageElement ape){
		Collection<Attribute> allAttr = new HashSet<Attribute>();
		
		Form f = (Form) ape.eContainer().eContainer();
		
		//Form f = (Form) EcoreUtil.getRootContainer(ape);
		System.out.println("DEBUG Mode working?!");
		Collection<Feature> feats = f.getEntity().getFeatures(); // feats to show in scoping
		for(Feature fe : feats){
			if(fe instanceof Attribute)
				allAttr.add((Attribute) fe);
		}
		
		return allAttr;
	}*/
}
