-- @path Forms=/at.ac.tuwien.big.forms.transformations/metamodel/forms.ecore

module Entities2Forms;
create OUT : Forms from IN : Forms;

helper def: welcomeFormEntity : Forms!Entity = OclUndefined;
helper def : id : Integer = 0;
helper context Integer def : inc() : Integer = self + 1; 
helper context String def : firstToUpper() : String = self.substring(1,1).toUpper() + (self.substring(2,self -> size()));

rule EntityModel2FormModel {
	from
		em : Forms!EntityModel
	to 
		fm : Forms!FormModel (
			forms <- em.entityModelElements -> select(e|e.oclIsTypeOf(Forms!Entity))
		)
}

rule Entity2Form {
	from
		e : Forms!Entity
	using {
		initPage : Forms!Page = thisModule.Entity2InitialPage(e);	
	}
	to
		f : Forms!Form (
			name <- e.name,
			title <- e.name,
			pages <- initPage
		)
		
	do{
		f.entity <- e;
		if(e = thisModule.welcomeFormEntity) {
			f.welcomeForm <- true;	
		}
		for(rel in e.features) {
			if(rel.oclIsTypeOf(Forms!Attribute)) {
				initPage.pageElements <- thisModule.Attribute2AttributePageElement(rel);	
			}
			if(rel.oclIsTypeOf(Forms!Relationship)) {
				f.pages <- f.pages.append(thisModule.Relationship2Page(rel));
				f.pages.last().pageElements <- thisModule.Relationship2List(rel);
			}
		}
		-- TODO: add attributes of supersupertypes?
		if(e.superType.oclIsUndefined() = false) {
			for(rel2 in e.superType.features) {
				if(rel2.oclIsTypeOf(Forms!Attribute)) {
					initPage.pageElements <- initPage.pageElements.append(thisModule.Attribute2AttributePageElement(rel2));
				}
			}
		}
	}
}


lazy rule Entity2InitialPage {
	from
		e: Forms!Entity
	to
		pg : Forms!Page(
			title <- e.name.firstToUpper().concat(' Details')
		)
}



lazy rule Relationship2Page {
	from
		r: Forms!Relationship
	to
		pg : Forms!Page(
			title <- r.name.firstToUpper()
		)
}

rule Relationship2List(r: Forms!Relationship) {
	using {
		form: Forms!Form = thisModule.resolveTemp(r.target,	'f');
	}
	to
		li : Forms!List()
	do {
		thisModule.id <- thisModule.id.inc();	
		li.elementID <- thisModule.id.toString();
		li.relationship <- r;
		li.label <- r.target.name;
		li.editingForm <- form;	
		li;
	}
}


entrypoint rule welcomeForm() {
	using {
		welcomeForm : Boolean = true;
		continue : Boolean = true;
	}
	do {
		for(e in Forms!Entity.allInstances()) {
			if(continue) {
				welcomeForm <- true;
				for(f in Forms!Relationship.allInstances()) {
					if(f.target = e) {
						welcomeForm <- false;	
					}
				}
				if(welcomeForm) {
					thisModule.welcomeFormEntity <- e;
					continue <- false;
				}
			}
		}
	}
}

lazy abstract rule Attribute2AttributePageElement {
	from
		att: Forms!Attribute
	to
		ape: Forms!AttributePageElement(
			label <- att.name.firstToUpper()
		)
}

lazy rule Attribute2TextField extends Attribute2AttributePageElement {
	from
		att: Forms!Attribute(att.type.name='String' or att.type.name='Year' or att.type.name='Integer' or att.type.name='Email')
	to
		ape: Forms!TextField()
	do {
		thisModule.id <- thisModule.id.inc();	
		ape.elementID <- thisModule.id.toString();
		ape.attribute <- att;
		if(att.type.name='Year' or att.type.name='Integer') {
			ape.format <- '^[0-9]+$';
		}
		if(att.type.name='Email') {
			ape.format <- '^\\w+@[a-zA-Z_]+\\.[a-zA-Z]{2,3}$';
		}
	}
}

lazy rule Attribute2TextArea extends Attribute2AttributePageElement {
	from
		att: Forms!Attribute(att.type.name='Text')
	to
		ape: Forms!TextArea()
	do {
		thisModule.id <- thisModule.id.inc();	
		ape.elementID <- thisModule.id.toString();
		ape.attribute <- att;	
	}
}

lazy rule Attribute2SelectionField extends Attribute2AttributePageElement {
	from
		att: Forms!Attribute(att.type.name='None' or att.type.name='Boolean')
	to
		ape: Forms!SelectionField()
	do {
		thisModule.id <- thisModule.id.inc();	
		ape.elementID <- thisModule.id.toString();
		ape.attribute <- att;	
	}
}

lazy rule Attribute2DateSelectionField extends Attribute2AttributePageElement {
	from
		att: Forms!Attribute(att.type.name='Date')
	to
		ape: Forms!DateSelectionField()
	do {
		thisModule.id <- thisModule.id.inc();	
		ape.elementID <- thisModule.id.toString();
		ape.attribute <- att;	
	}
}

lazy rule Attribute2TimeSelectionField extends Attribute2AttributePageElement {
	from
		att: Forms!Attribute(att.type.name='Time')
	to
		ape: Forms!TimeSelectionField()
	do {
		thisModule.id <- thisModule.id.inc();	
		ape.elementID <- thisModule.id.toString();
		ape.attribute <- att;	
	}
}

